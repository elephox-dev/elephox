#!/usr/bin/env php
<?php
declare(strict_types=1);

use Elephox\Console\ConsoleApplicationBuilder;
use Elephox\DI\Contract\ServiceCollection;
use Elephox\Support\Contract\ExceptionHandler;
use Elephox\Web\Routing\Contract\Router;
use Elephox\Web\Routing\RequestRouter;

require_once 'vendor/autoload.php';
const APP_ROOT = __DIR__;

// Build console application
$builder = ConsoleApplicationBuilder::create()
	->addLogging()
	->addWhoops()
;

// Load app commands
$builder->commands->loadFromNamespace("App\\Commands");

// Add the request router, so we can use it in commands
$builder->services->addSingleton(Router::class, RequestRouter::class, function (ServiceCollection $services): RequestRouter {
	return (new RequestRouter($services))->loadFromNamespace('App\\Routes');
});

// Load commands
$builder->commands->loadFromNamespace("Elephox\\Web\\Commands");
$builder->commands->loadFromNamespace("Elephox\\Plane\\Commands");

$app = $builder->build();
try {
	$app->run();
} catch (Throwable $e) {
	$app->services->get(ExceptionHandler::class)->handleException($e);
}
